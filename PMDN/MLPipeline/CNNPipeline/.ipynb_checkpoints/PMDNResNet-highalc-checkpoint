nohup: ignoring input
==================== Running DEBUG MODE ====================
change RAND_STATE: None -> 42
changing N_CV_TRIALS: 3 -> 2
Running all models with 
 num_epochs: 5 
 batch_size: 4 
 earlystop_patience: 0
========================================================        
Running CNNpipeline on: /ritter/share/data/UKBB_2020/h5files/t1mniz2-l-highalcl0u2-bingeauditl1u3-alcfreq-c-sex-age-n14617.h5        
Start time:             2023-02-06 12:22:37.085215        
Saving results at:      /ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/results//debug_run/20230206-1222
-------------------------- GPU  STATUS -----------------------------          
Torch version:     1.11.0          
CUDA available?    True          
graphic name:      NVIDIA GeForce RTX 3090          
using GPUs:        ['cuda:2']          
memory alloc:      ['0.0 GB']          
memory cached:     ['0.0 GB']          
random_seed:       42          
--------------------------------------------------------------------          
Loaded model :: PMDN_highalc for {X}->{highalc}
-----------------------------------------
missing_keys in current model: ['cfs', 'ln1.weight', 'ln1.bias', 'pmdn1.cfs', 'pmdn1.beta_mdn']
unexpected_keys in pretrained model: ['fc.weight', 'fc.bias']
running 2 different combinations of [DL models] x [inp -> out] x [CV trials]
(0)	 PMDN_highalc	 X-highalc	 cv_i=0
(1)	 PMDN_highalc	 X-highalc	 cv_i=1
Traceback (most recent call last):
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/runCNNpipeline.py", line 231, in <module>
    if __name__ == "__main__": main()
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/runCNNpipeline.py", line 190, in main
    parallel(
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/parallel.py", line 1043, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/parallel.py", line 861, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/parallel.py", line 779, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/joblib/parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/CNNpipeline.py", line 415, in cnn_pipeline
    raise e
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/CNNpipeline.py", line 309, in cnn_pipeline
    model, report = trainer.train_model(train_loader, val_loader, confounder_key=cf_name,
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/../../nitorch/nitorch/trainer.py", line 331, in train_model
    outputs  = self.model(inputs)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/models.py", line 471, in forward
    h, loss_terms = self.feature_extractor(x)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/models.py", line 633, in forward
    x, loss_term = self.pmdn1(x)
  File "/home/gonzalo/miniconda3/envs/cnn2/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ritter/share/projects/gonzalo/thesis/PMDN/MLPipeline/CNNPipeline/PMDNLayer.py", line 30, in forward
    residual = f - f_r
RuntimeError: The size of tensor a (4) must match the size of tensor b (24) at non-singleton dimension 0
